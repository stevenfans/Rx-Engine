; UART TRANSMIT
; STEVEN PHAN
 
; ****************************************************
; 	DECLARE CONSTANTS
; ****************************************************
; R0 -> DISPLAY THE LETTER
; R1
; R2 -> MAX VALUE
; R3
; R4 -> LEDS
; R5 -> COUNTER FOR THE LEDS
; R6 -> DELAY COUNTER
; R7 -> COUNTER FOR EACH LETTER IN STRING
; R8
; R9 
; RA
; RB -> BINTOASCII
; RC -> HOLDS THE ITERATION OF COUNTS
; RD -> BINTOASCII
; RE -> BINTOASCII
; RF
	
	
PC			EQU  R7		
MAX			EQU  0018	;MAXIMUM STRING PRINTED
STR 		EQU  R0
COUNT 		EQU  RC

LEDS		EQU  R4
ON			EQU  0001
LED_CNT		EQU	 R5
DIS_CNT		EQU  R6

; ASCII DATA CONSTANTS

ASCII_C		EQU  0043
ASCII_S		EQU  0053
ASCII_U		EQU  0055
ASCII_L		EQU  004C
ASCII_B		EQU  0042
ASCII_E     EQU  0045

ASCII_4		EQU  0034
ASCII_6		EQU	 0036
ASCII_0		EQU  0030
ASCII_-		EQU	 002D

ASCII_CR	EQU	 000D
ASCII_NL    EQU  000A
ASCII_SPACE EQU  0020

	; ***************************************************
	; 	 INITIALIZATIONS
	; ***************************************************
START	ENINT

		LOAD R0, ASCII_C 		;LOAD R0 WITH C
		STORE R0, 0000			;STORE R0 INTO M[0]
		
		LOAD R0, ASCII_S 		;LOAD R0 WITH S
		STORE R0, 0001			;STORE R0 INTO M[1]
		
		LOAD R0, ASCII_U 		;LOAD R0 WITH U
		STORE R0, 0002			;STORE R0 INTO M[2]
		
		LOAD R0, ASCII_L		;LOAD R0 WITH L
		STORE R0, 0003			;STORE R0 INTO M[3]
		
		LOAD R0, ASCII_B 		;LOAD R0 WITH B
		STORE R0, 0004			;STORE R0 INTO M[4]
		
		LOAD 	R0, ASCII_SPACE ;LOAD R0 WITH SPACE
		STORE	R0, 0005		;STORE R0 INTO M[5]
		
		LOAD 	R0, ASCII_C		;LOAD R0 WITH C
		STORE	R0, 0006		;STORE R0 INTO M[6]
		
		LOAD 	R0, ASCII_E		;LOAD R0 WITH E
		STORE	R0, 0007		;STORE R0 INTO M[7]
		
		LOAD 	R0, ASCII_C		;LOAD R0 WITH C
		STORE	R0, 0008		;STORE R0 INTO M[8]
		
		LOAD 	R0, ASCII_S		;LOAD R0 WITH S
		STORE	R0, 0009		;STORE R0 INTO M[9]
		
		LOAD 	R0, ASCII_SPACE	;LOAD R0 WITH SPACE
		STORE	R0, 000A		;STORE R0 INTO M[A]
		
		LOAD 	R0, ASCII_4		;LOAD R0 WITH 4
		STORE	R0, 000B		;STORE R0 INTO M[B]
		
		LOAD 	R0, ASCII_6		;LOAD R0 WITH 6
		STORE	R0, 000C		;STORE R0 INTO M[C]
		
		LOAD 	R0, ASCII_0		;LOAD R0 WITH 0
		STORE	R0, 000D		;STORE R0 INTO M[D]
			
		LOAD 	R0, ASCII_SPACE	;LOAD R0 WITH SPACE
		STORE   R0,	000E		;STORE R0 INTO M[E]
		
		LOAD  	R0, ASCII_-		;LOAD R0 WITH -
		STORE  	R0, 000F		;STORE R0 INTO M[F]
		
		LOAD 	R0, ASCII_SPACE	;LOAD R0 WITH SPACE
		STORE	R0, 0010		;STORE R0 INTO M[10]
		
		LOAD 	R0, ASCII_0		;LOAD R0 WITH 0
		STORE 	R0, 0070		;STORE R0 INTO M[70]
		STORE 	R0, 0071		;STORE R0 INTO M[71]
		STORE	R0, 0072		;STORE R0 INTO M[72]
		STORE 	R0, 0073		;STORE R0 INTO M[73]
		STORE	R0, 0074		;STORE R0 INTO M[74]
		
		LOAD R0, ASCII_CR  		;LOAD R0 WITH CR
		STORE R0, 0010    		;STORE R0 IN M[16]
		
		LOAD R0, ASCII_NL		;LOAD R0 WITH NL
		STORE R0, 0011			;STORE 60 IN M[17]
		
		LOAD PC, 0001			;LOAD PC WITH 1
		LOAD LEDS, ON
	
	; ***************************************************
	; 		MAIN LOOP
	; ***************************************************
	
MAIN	
		ADD 	LED_CNT, 0001
		ADDC	DIS_CNT, 0000
		COMP	DIS_CNT, 0006
		JUMPC 	LED_DISPLAY
		
		LOAD 	LED_CNT, 0000
		LOAD    DIS_CNT, 0000
		RL	LEDS
		
LED_DISPLAY	
		OUTPUT  LEDS, 0002	 ;output at reg port 0x02
		JUMP MAIN
	
; ISR ADDRESS
	ADDRESS 0300
	
ISR
		FETCH  	STR, PC	    
		OUTPUT 	STR, 0000	;display the character at 0x00
		ADD 	PC, 0001	;increment by 1	
		COMP   	PC, MAX 	;compare the maximum value to the counter
		CALLZ  	FULL	
		RETEN	

FULL	;this will reset the counter when it reaches the maximum
		LOAD PC, 0000			;reset it back to 0
		ADD	 COUNT, 0001		;counter + 1
		CALL BINTOASCII		
		RETURN

BINTOASCII
		LOAD 	RE, R2
		LOAD 	RD, 2710
		CALL	FINDIT
  
		ADD 	RB, 0030
		STORE 	RB, 0070
		LOAD 	RD, 03E8
		CALL	FINDIT
		
		ADD 	RB, 0030
		STORE 	RB, 0071
		LOAD 	RD, 0064
		CALL	FINDIT
		
		ADD 	RB, 0030
		STORE 	RB, 0062
		LOAD 	RD, 000A
		CALL	FINDIT
		
		ADD 	RB, 0030
		STORE 	RB, 0073
		ADD 	RE, 0030
		STORE 	RE, 0074
		
		RETURN
		
FINDIT
		LOAD RB, 0000
NO
		SUB  	RE, RD
		JUMPC 	YES
		ADD 	RB, 0001
		JUMP 	NO
		
YES		
		ADD RE, RD
		RETURN
		
; ISR vectored through 0FFE (Predefined interrupt address)

		ADDRESS	0FFE	
				
ENDIT	JUMP ISR
	END
		
	
	